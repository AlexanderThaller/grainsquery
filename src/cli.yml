name: grainsquery
author: Alexander Thaller <alexander.thaller@trivago.com>
about: Parse grain files generated by salt, check grains, generate reports.
settings:
  - ColorAuto
args:
    - folder:
        help: folder from which to read the grain files
        long: folder
        short: f
        takes_value: true
        global: true
    - loglevel:
        help: the loglevel to run under
        long: loglevel
        short: l
        takes_value: true
        global: true
    - environment:
        help: filter out all minions that are not in the given environment
        long: filter.environment
        short: e
        takes_value: true
        global: true
    - id:
        help: filter out all minions that don't match the given id (allows regex)
        long: filter.id
        short: i
        takes_value: true
        global: true
    - id_inverse:
        help: reverts the filter for the id and prints all minions that don't match the id if true
        long: filter.inverse
        short: n
        takes_value: true
        global: true
    - os_family:
        help: filter out all minions that don't use the given operating systems
        long: filter.os_family
        short: o
        takes_value: true
        global: true
    - productname:
        help: filter out all minions that don't use the given productname
        long: filter.productname
        short: p
        takes_value: true
        global: true
    - realm:
        help: filter out all minions that are not in the given realm
        long: filter.realm
        short: m
        takes_value: true
        global: true
    - saltversion:
        help: filter out all minions that are not using the given salt version
        long: filter.saltversion
        short: s
        takes_value: true
        global: true
    - roles:
        help: filter out all minions which don't have the given role (multiple values possible)
        long: filter.roles
        short: r
        takes_value: true
        global: true
    - noenvironment:
        help: warn about minions that don't have the environment grain set
        long: warn.noenvironment
        takes_value: true
        global: true
    - norealm:
        help: warn about minions that don't have the realm grain set
        long: warn.norealm
        takes_value: true
        global: true
    - noroles:
        help: warn about minions that don't have any roles set
        long: warn.noroles
        takes_value: true
        global: true
    - cachefile:
        help: file to use for caching the result of the grains file parsing
        long: cache.file
        takes_value: true
        value_name: file
        global: true
    - cacheuse:
        help: if true we will use and generate a cachefile specified by cache,file
        long: cache.use
        takes_value: true
        global: true

subcommands:
  - report:
      about: generate a report out the grain files
  - validate:
      about: show warnings (missing roles, environment, realm, etc.) about the parsed grains
  - list:
      about: show minions which where parsed from the grains
  - ssh_hosts:
      about: generate ssh hosts file from grains
      args:
        - hosts_prefix:
            help: a prefix that will be written in front of every host (format prefix.host)
            long: host_prefix
            takes_value: true
            value_name: prefix
